name: CI/CD Release

on:
    push:
        tags:
            - "v*"

jobs:
    release:
        runs-on: windows-latest

        steps:
            - uses: actions/checkout@v4

            - name: Install dependencies and build app
              run: |
                  yarn install
                  yarn run build
                  yarn run package-win-ci

            - name: Get app version
              id: package-version
              run: |
                  $packageVersion = (Get-Content package.json | ConvertFrom-Json).version
                  echo "current-version=$packageVersion" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
              # 使用 PowerShell 会更稳定，特别是在 Windows 上
              shell: pwsh

            - name: Rename assets for release
              id: rename-assets
              run: |
                  $ver = "${{ steps.package-version.outputs.current-version }}"
                  ren "./bin/win32/x64/Fluent Reader Setup $ver.exe" "Fluent.Reader.Setup.$ver.x64.exe"
              shell: cmd

            - name: Create Release and Upload Assets
              uses: softprops/action-gh-release@v2
              with:
                  # 这个 Action 会自动使用 GITHUB_TOKEN，但显式声明也没问题
                  # token: ${{ secrets.GITHUB_TOKEN }}

                  # 发布版本名称
                  name: Fluent Reader v${{ steps.package-version.outputs.current-version }}

                  # 和之前一样，创建为草稿
                  draft: true
                  prerelease: false

                  # 使用多行字符串列出所有要上传的文件
                  # 这里的文件名是上一步重命名后的新名字
                  files: |
                      ./bin/win32/x64/Fluent.Reader.Setup.${{ steps.package-version.outputs.current-version }}.x64.exe
